name: Deploy Telegram Bot

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_HOST }} $(ssh-keyscan ${{ secrets.SSH_HOST }} 2>/dev/null)" > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Create required directories and files
        run: |
          # Create media directory if it doesn't exist
          mkdir -p media
          
          # Create a default cover image if it doesn't exist
          if [ ! -f media/cover_image.jpg ]; then
            echo "Creating default cover image..."
            convert -size 800x400 xc:gray -pointsize 40 -gravity center \
              -draw "text 0,0 'Default Cover Image'" \
              media/cover_image.jpg || {
              echo "Failed to create cover image with ImageMagick, using wget instead..."
              wget https://via.placeholder.com/800x400.jpg -O media/cover_image.jpg
            }
          fi
          
          # Create data directory if it doesn't exist
          mkdir -p data

      - name: Deploy to VPS
        run: |
          echo "Creating project directory on VPS..."
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "mkdir -p ~/anna-telegram-bot/media ~/anna-telegram-bot/data"
          
          echo "Syncing repository to VPS..."
          rsync -avz --delete \
            --exclude='.env' \
            ./ ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/anna-telegram-bot/

      - name: Setup and start bot
        run: |
          echo "Setting up permissions and starting bot..."
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "cd ~/anna-telegram-bot && \
            chmod +x start.sh stop.sh entrypoint.sh && \
            docker compose down || true && \
            docker compose pull && \
            docker compose up -d && \
            sleep 5 && \
            docker compose ps && \
            docker compose logs --tail=50"

      - name: Check deployment status
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          echo "Checking deployment status..."
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "cd ~/anna-telegram-bot && \
            docker compose ps && \
            docker compose logs --tail=50"

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up sensitive files..."
          rm -rf ~/.ssh/
